#
# SSL config below is inspired by websites:
#  - https://syslink.pl/cipherlist/
#  - https://ssl-config.mozilla.org/
# Generated for Intermediate configuration, nginx 1.20.1 or later
#

server {
    listen 80 default_server;
    server_name _;
    server_name_in_redirect off;
    root /usr/share/nginx/html/;
}

server {
    listen 80;
    server_name www.${NGINX_HOST} ${NGINX_HOST};
    return 301 https://${NGINX_HOST}$request_uri;
}

server {
    listen 443 ssl default_server;
    server_name _;
    server_name_in_redirect off;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam               /etc/letsencrypt/dhparams/dhparam.pem;

    ssl_certificate           /etc/letsencrypt/live/${NGINX_HOST}/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/${NGINX_HOST}/privkey.pem;
    ssl_trusted_certificate   /etc/letsencrypt/live/${NGINX_HOST}/chain.pem;

    root /usr/share/nginx/html/;
}

{% if cookiecutter.nginx_redirect_www_prefix == 'y' %}
server {
    listen 443 ssl;
    server_name www.${NGINX_HOST};

    # Load the Diffie-Hellman parameter.
    ssl_dhparam               /etc/letsencrypt/dhparams/dhparam.pem;

    ssl_certificate           /etc/letsencrypt/live/${NGINX_HOST}/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/${NGINX_HOST}/privkey.pem;
    ssl_trusted_certificate   /etc/letsencrypt/live/${NGINX_HOST}/chain.pem;

    return 301 https://${NGINX_HOST}$request_uri;
}
{% endif %}

server {
    listen                    443 ssl http2;
    server_name               ${NGINX_HOST} {% if cookiecutter.nginx_redirect_www_prefix == 'n' %}www.${NGINX_HOST}{% endif %};

    add_header                Strict-Transport-Security "max-age=31536000" always;
    add_header                X-Content-Type-Options nosniff;
    add_header                X-XSS-Protection "1; mode=block";
    add_header                X-Frame-Options DENY;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam               /etc/letsencrypt/dhparams/dhparam.pem;

    ssl_certificate           /etc/letsencrypt/live/${NGINX_HOST}/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/${NGINX_HOST}/privkey.pem;
    ssl_trusted_certificate   /etc/letsencrypt/live/${NGINX_HOST}/chain.pem;

    gzip {% if cookiecutter.nginx_compression_enabled == 'y'%}on{% else %}off{% endif %};
    gzip_static {% if cookiecutter.nginx_compression_enabled == 'y'%}on{% else %}off{% endif %};
    gzip_proxied {% if cookiecutter.nginx_compression_enabled == 'y'%}any{% else %}off{% endif %};
    gzip_vary on;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types
        # text/html is always in gzip_types
        text/richtext
        text/plain
        text/css
        text/x-script
        text/x-component
        text/x-java-source
        text/x-markdown
        application/javascript
        application/x-javascript
        text/javascript
        text/js
        image/x-icon
        application/x-perl
        application/x-httpd-cgi
        text/xml
        application/xml
        application/xml+rss
        application/json
        multipart/bag
        multipart/mixed
        application/xhtml+xml
        font/ttf
        font/otf
        font/x-woff
        image/svg+xml
        application/vnd.ms-fontobject
        application/ttf
        application/x-ttf
        application/otf
        application/x-otf
        application/truetype
        application/opentype
        application/x-opentype
        application/font-woff
        application/eot
        application/font
        application/font-sfnt
        application/wasm;

    access_log                /dev/stdout;
    error_log                 /dev/stderr info;

    client_max_body_size 100M;

    location /static/ {
        root /srv/;
    }

    location /media/ {
        root /srv/;
    }

    location / {
        proxy_pass_header Server;
        proxy_redirect off;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_pass http://app:8000/;
    }
}
